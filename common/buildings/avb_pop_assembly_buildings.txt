#############
# Robot buildings
#############
building_avb_robot_assembly_plant_2 = {
	base_buildtime = @avb_b3_time
	can_build = no

	category = pop_assembly
	
	potential = {
		exists = owner
		OR = {
			owner = { is_ai = no }
			NOT = { exists = assembling_species }
			assembling_species = { is_robotic_species = yes }
		}
		owner = {
			is_regular_empire = yes
			is_individual_machine = no
			NOT = { has_policy_flag = robots_outlawed }
			OR = {
				is_ai = no
				NOT = { has_ascension_perk = ap_engineered_evolution }
				is_materialist = yes
			}
		}
		NOT = { has_modifier = slave_colony }
	}
	
	allow = {
		has_fully_upgraded_capital = yes
	}
	
	convert_to = {
		building_avb_machine_assembly_plant_2
	}
	
	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					is_regular_empire = no
					has_policy_flag = robots_outlawed
				}
			}
			has_modifier = slave_colony
			AND = {
				owner = { is_ai = yes }
				free_district_slots = 0
				free_building_slots = 0
				free_housing <= 0
				free_jobs <= 0
			}
			owner = {
				is_ai = yes
				has_ascension_perk = ap_engineered_evolution
				is_materialist = no
			}
		}
	}
	
	planet_modifier = {
		job_roboticist_add = 3
	}
	inline_script = building_ring/robot_assembly3
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				OR = {
					has_origin = origin_mechanists
					is_individual_machine = yes
					has_country_flag = synthetic_empire
				}
			}
			any_owned_pop = {
				has_auto_modding_trait = yes
			}
		}
		modifier = {
			auto_mod_monthly_add = 4
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_country_flag = synth_unscheduled_updates
			}
		}
		modifier = {
			planet_pop_assembly_mult = 0.1
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_country_flag = synth_safe_updates
			}
		}
		modifier = {
			planet_pop_assembly_mult = -0.1
			planet_stability_add = 5
		}
	}
	
	resources = {
		category = planet_buildings
		cost = {
			minerals = @avb_b3_minerals
			rare_crystals = @avb_b3_rare_cost
		}
		upkeep = {
			energy = @avb_b3_upkeep
			rare_crystals = @avb_b3_rare_upkeep
		}
		inline_script = {
			script = building_resources/avb_ringworld_resources
			RARE = rare_crystals
			TRIGGER = "avb_hg_changes = yes"
		}
	}
	prerequisites = {
		"tech_avb_robot_assembly_plant_2"
	}
	triggered_desc = {
		text = job_roboticist_effect_desc
	}

	triggered_desc = {
		trigger = {
			OR = {
				has_building = building_clone_vats
				has_building = building_clone_army_clone_vat
				has_building = building_posthumous_employment_center
				AND = {
					exists = assembling_species
					assembling_species = { is_organic_species = yes }
					exists = owner
				}
			}
		}
		text = tooltip_organic_and_artificial_assembly_warning
	}
	
}
#############
# Machine buildings
#############

building_avb_machine_assembly_plant_2 = {
	icon = building_avb_robot_assembly_plant_2
	base_buildtime = @avb_b3_time
	can_build = no

	category = pop_assembly
	
	potential = {
		exists = owner
		owner = {
			OR = {
				is_machine_empire = yes
				is_individual_machine = yes
			}
		}
		NOT = { has_modifier = gestation_colony }
	}
	allow = {
		has_fully_upgraded_capital = yes
	}
	
	convert_to = {
		building_avb_robot_assembly_plant_2
	}
	
	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				is_robot_empire = no
			}
			AND = {
				owner = { is_ai = yes }
				free_district_slots = 0
				free_building_slots = 0
				free_housing <= 0
				free_jobs <= 0
			}
		}
	}
	
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				is_machine_empire = yes
			}
		}
		job_replicator_add = 6
	}
	inline_script = building_ring/robot_assembly3

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				is_individual_machine = yes
			}
		}
		job_roboticist_add = 4
	}
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				OR = {
					is_machine_empire = yes
					is_individual_machine = yes
				}
			}
			any_owned_pop = {
				has_auto_modding_trait = yes
			}
		}
		modifier = {
			auto_mod_monthly_add = 4
		}
	}
	
	resources = {
		category = planet_buildings
		cost = {
			minerals = @avb_b3_minerals
			rare_crystals = @avb_b3_rare_cost
		}
		upkeep = {
			energy = @avb_b3_upkeep
			rare_crystals = @avb_b3_rare_upkeep
		}
		inline_script = {
			script = building_resources/avb_ringworld_resources
			RARE = rare_crystals
			TRIGGER = "avb_hg_changes = yes"
		}
	}
	
	triggered_desc = {
		trigger = {
			exists = owner
			owner = {
				is_machine_empire = yes
			}
		}
		text = job_replicator_effect_desc
	}

	triggered_desc = {
		trigger = {
			exists = owner
			owner = {
				is_individual_machine = yes
			}
		}
		text = job_roboticist_effect_desc
	}
	
	prerequisites = {
		"tech_avb_machine_assembly_plant_2"
	}
}

building_avb_spawning_pool_2 = {
	base_buildtime = @avb_b2_time
	can_build = no

	category = amenity
	
	potential = {
		exists = owner
		owner = {
			is_hive_empire = yes
			NOT = { has_origin = origin_progenitor_hive }
		}
		or = {
			num_buildings = { type = any value < 15 }
			owner = { is_ai = no }
		}
	}
	convert_to = {
		building_avb_offspring_nest_2
	}
	allow = {
		has_fully_upgraded_capital = yes
	}
	
	destroy_trigger = {
		exists = owner
		owner = {
			OR = {
				is_hive_empire = no
				has_origin = origin_progenitor_hive
			}
		}
	}
	
	planet_modifier = {
		job_spawning_drone_add = 2
	}
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_technology = tech_gene_tailoring
			}
			any_owned_pop = {
				has_auto_modding_trait = yes
			}
		}
		modifier = {
			auto_mod_monthly_add = 2
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_origin = origin_overtuned
			}
			any_owned_pop = {
				has_auto_modding_trait = yes
			}
		}
		modifier = {
			auto_mod_monthly_add = 2
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_active_tradition = tr_cybernetics_modular_cybernetics_hive }
		}
		modifier = {
			job_augmentor_drone_add = 2
		}
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @avb_b2_minerals
			exotic_gases = 50
			volatile_motes = 25
		}
		upkeep = {
			energy = @avb_b2_upkeep
			exotic_gases = 2
			volatile_motes = 1
		}
	}
	
	prerequisites = {
		"tech_avb_spawning_pool_2"
	}
	triggered_desc = {
		trigger = {
			NAND = {
				exists = owner
				owner = { has_origin = origin_necrophage }
				exists = growing_species
				growing_species = {
					NOT = { has_trait = trait_hive_mind }
				}
			}
		}
		text = job_spawning_drone_effect_desc
	}
	triggered_desc = {
		trigger = {
			exists = owner
			owner = { has_origin = origin_necrophage }
			exists = growing_species
			growing_species = {
				NOT = { has_trait = trait_hive_mind }
			}
		}
		text = job_spawning_drone_necrophage_effect_desc
	}

	triggered_desc = {
		trigger = {
			exists = owner
			owner = {
				has_active_tradition = tr_cybernetics_modular_cybernetics_hive
			}
		}
		text = job_augmentor_drone_assembly_desc
	}

	triggered_desc = {
		text = spawning_pool_tooltip
	}
}

building_avb_offspring_nest_2 = {
	base_buildtime = @avb_b2_time

	can_build = no
	category = pop_assembly

	potential = {
		exists = owner
		owner = { has_origin = origin_progenitor_hive }
		or = {
			num_buildings = { type = any value < 15 }
			owner = { is_ai = no }
		}
	}

	destroy_trigger = {
		exists = owner
		owner = { NOT = { has_origin = origin_progenitor_hive } }
	}

	allow = {
		has_major_upgraded_capital = yes
	}

	planet_modifier = {
		job_offspring_drone_add = 2
	}

	convert_to = {
		building_avb_spawning_pool_2
	}

	prerequisites = {
		tech_avb_offspring_nest_2
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_active_tradition = tr_cybernetics_modular_cybernetics_hive }
		}
		modifier = {
			job_augmentor_drone_add = 2
		}
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @avb_b2_minerals
			exotic_gases = 50
		}
		upkeep = {
			energy = @avb_b2_upkeep
		}
	}
	triggered_desc = {
		trigger = {
			exists = owner
			owner = { has_origin = origin_progenitor_hive }
			exists = growing_species
			growing_species = {
				has_trait = trait_hive_mind
			}
		}
		text = job_offspring_drone_effect_desc
	}

	triggered_desc = {
		trigger = {
			exists = owner
			owner = {
				has_active_tradition = tr_cybernetics_modular_cybernetics_hive
			}
		}
		text = job_augmentor_drone_assembly_desc
	}

	triggered_desc = {
		text = offspring_nest_tooltip
	}
}

building_avb_clone_vats_2 = {
	base_buildtime = @avb_b2_time
	can_build = no

	category = pop_assembly
	
	potential = {
		exists = owner
		owner = { has_tradition = tr_genetics_adopt }
		NOT = { has_modifier = resort_colony }
		OR = {
			owner = { is_ai = no }
			NOT = { exists = assembling_species }
			assembling_species = { is_organic_species = yes }
		}
		OR = {
			owner = { is_ai = no }
			NAND = {
				free_district_slots = 0
				free_building_slots <= 1
				free_housing <= 0
				free_jobs <= 0
			}
		}
	}
	
	allow = {
		has_fully_upgraded_capital = yes
	}
	
	destroy_trigger = {
		exists = owner
		OR = {
			AND = {
				owner = { is_ai = yes }
				free_district_slots = 0
				free_building_slots = 0
				free_housing <= 0
				free_jobs <= 0
			}
			NOT = { owner = { has_tradition = tr_genetics_adopt } }
		}
	}

	planet_modifier = {
		planet_pop_assembly_organic_add = 6
	}
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_technology = tech_gene_tailoring
			}
			any_owned_pop = {
				has_auto_modding_trait = yes
			}
		}
		modifier = {
			auto_mod_monthly_add = 2
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_origin = origin_overtuned
			}
			any_owned_pop = {
				has_auto_modding_trait = yes
			}
		}
		modifier = {
			auto_mod_monthly_add = 2
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_tradition = tr_genetics_efficient_cloning }
		}
		modifier = {
			planet_pop_assembly_organic_add = 1.5
		}
	}
	inline_script = building_ring/clone3
	resources = {
		category = planet_buildings

		# Base cost
		cost = {
			minerals = 1000
		}
		# Org/Lith cost
		cost = {
			trigger = {
				exists = owner
				owner = { is_lithoid_empire = no }
			}
			food = 1000
		}
		cost = {
			trigger = {
				exists = owner
				owner = { is_lithoid_empire = yes }
			}
			energy = 1000
		}

		# Base upkeep
		upkeep = {
			energy = 5
		}
		# Org/Lith upkeep
		upkeep = {
			trigger = {
				exists = owner
				owner = { is_lithoid_empire = no }
			}
			food = 60
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = { is_lithoid_empire = yes }
			}
			minerals = 60
		}
		inline_script = {
			script = building_resources/avb_ringworld_resources
			RARE = food
			TRIGGER = "avb_hg_changes = yes
			owner = { is_lithoid_empire = no }"
		}
		inline_script = {
			script = building_resources/avb_ringworld_resources
			RARE = minerals
			TRIGGER = "avb_hg_changes = yes
			owner = { is_lithoid_empire = yes }"
		}
	}
	triggered_desc = {
		trigger = {
			OR = {
				has_building = building_robot_assembly_plant
				AND = {
					exists = assembling_species
					assembling_species = { is_robotic_species = yes }
				}
			}
		}
		text = tooltip_organic_and_artificial_assembly_warning
	}
	prerequisites = {
		"tech_avb_clone_vats_2"
	}
}

building_avb_clone_army_clone_vat_2 = {
	base_buildtime = 900
	position_priority = 100
	prerequisites = { tech_avb_clone_army_vats_2 }
	can_build = no

	category = pop_assembly

	potential = {
		avb_hg_changes = yes
		exists = owner
		owner = {
			has_origin = origin_clone_army
			has_clone_full_path = yes
		}
		if = {
			limit = {
				owner = { is_ai = yes }
			}
			NOR = {
				has_building = building_avb_clone_army_clone_vat_2
				AND = {
					exists = assembling_species
					assembling_species = { is_robotic_species = yes }
				}
			}
		}
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					NOT = { has_origin = origin_clone_army }
					is_synthetic_empire = yes
					has_clone_full_path = no
				}
			}
		}
	}

	inline_script = pop_assembly/avb_clone_army_vat_t2

	resources = {
		category = planet_buildings
		cost = {
			minerals = @avb_b3_minerals
		}
		upkeep = {
			energy = @avb_b3_upkeep
		}
	}
	triggered_desc = {
		text = building_clone_army_clone_vat_2_effect_desc
	}
	triggered_desc = {
		trigger = {
			OR = {
				has_building = building_robot_assembly_plant
				AND = {
					exists = assembling_species
					assembling_species = { is_robotic_species = yes }
				}
			}
		}
		text = tooltip_organic_and_artificial_assembly_warning
	}

	is_essential = yes
	ai_estimate_without_unemployment = yes
}

building_avb_posthumous_employment_center_2 = {
	base_buildtime = @avb_b2_time
	can_build = no

	category = pop_assembly

	potential = {
		avb_hg_changes = yes
		exists = owner
		OR = {
			owner = { is_ai = no }
			NOT = { exists = assembling_species }
			assembling_species = { is_organic_species = yes }
		}
		OR = {
			owner = { is_ai = no }
			NAND = {
				free_district_slots = 0
				free_building_slots <= 1
				free_housing <= 0
				free_jobs <= 0
			}
		}
		owner = {
			is_regular_empire = yes
			has_valid_civic = civic_permanent_employment
		}
	}

	allow = {
		has_fully_upgraded_capital = yes
	}

	prerequisites = {
		"tech_avb_posthumous_employment_center_2"
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				NOT = { has_valid_civic = civic_permanent_employment }
			}
			AND = {
				owner = { is_ai = yes }
				free_district_slots = 0
				free_building_slots = 0
				free_housing <= 0
				free_jobs <= 0
			}
		}
	}

	planet_modifier = {
		job_reassigner_add = 2
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @avb_b2_minerals
		}
		upkeep = {
			energy = @avb_b2_upkeep
		}
	}

	triggered_desc = {
		text = job_reassigner_effect_desc
	}
	triggered_desc = {
		text = posthumous_employment_center_2_tooltip
	}
	triggered_desc = {
		trigger = {
			OR = {
				has_building = building_robot_assembly_plant
				AND = {
					exists = assembling_species
					assembling_species = { is_robotic = yes }
				}
			}
		}
		text = tooltip_organic_and_artificial_assembly_warning
	}
}
##
## Toxic Bath Time
##

building_avb_toxic_bath_hive_2 = {
	base_buildtime = @avb_b2_time
	category = amenity
	can_build = no

	allow = {
		has_major_upgraded_capital = yes
		owner = {
			OR = {
				is_ai = no
				prev = { has_any_industry_district = yes }
			}
		}
	}

	potential = {
		avb_hg_changes = yes
		owner = {
			is_hive_empire = yes
			has_valid_civic = civic_hive_toxic_baths
			NAND = {
				is_ai = yes
				prev = { has_any_industry_district = no }
			}
		}
	}
	prerequisites = {
		tech_avb_toxic_bath_hive_2
	}
	destroy_trigger = {
		exists = owner
		owner = {
			OR = {
				is_hive_empire = no
				NOT = { has_valid_civic = civic_hive_toxic_baths }
				AND = {
					is_ai = yes
					prev = { has_any_industry_district = no }
				}
			}
		}
	}
	planet_modifier = {
		job_bath_attendant_hive_add = @avb_b2_jobs
	}

	triggered_desc = {
		trigger = {
			exists = owner
		}
		text = job_toxic_baths_effect_hive_desc
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @avb_a2_minerals
		}
		upkeep = {
			energy = @avb_a2_upkeep
		}
	}
}

building_avb_toxic_bath_machine_2 = {
	base_buildtime = @avb_b2_time
	category = amenity
	can_build = no

	allow = {
		has_major_upgraded_capital = yes
	}

	potential = {
		avb_hg_changes = yes
		OR = {
			AND = {
				owner = { is_machine_empire = yes }
				owner = { has_toxic_baths = yes }
			}
			AND = {
				owner = { is_individual_machine = yes }
				owner = { has_toxic_baths = yes }
			}
		}
	}
	prerequisites = {
		tech_avb_toxic_bath_machine_2
	}
	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				NOR = {
					is_machine_empire = no
					is_individual_machine = no
				}
			}
			owner = {
				has_toxic_baths = no
			}
		}
	}
	triggered_planet_modifier = {
		potential = {
			owner = { is_machine_empire = yes }
		}
		job_bath_attendant_machine_add = @avb_b2_jobs
	}

	triggered_planet_modifier = {
		potential = {
			owner = { is_individual_machine = yes }
		}
		job_bath_attendant_individual_machine_add = @avb_b2_jobs
	}

	triggered_desc = {
		trigger = {
			exists = owner
			owner = {
				is_individual_machine = no
			}
		}
		text = job_toxic_baths_effect_machine_desc
	}
	triggered_desc = {
		trigger = {
			exists = owner
			owner = {
				is_individual_machine = yes
			}
		}
		text = job_toxic_baths_effect_machine_desc_2
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @avb_b2_minerals
		}
		upkeep = {
			energy = @avb_b2_upkeep
		}
	}
}

# Necrophages

building_avb_necrophage_3 = {
	base_buildtime = @avb_b3_time
	can_build = no
	position_priority = 100

	category = pop_assembly

	desc = {
		trigger = {
			OR = {
				NOT = { exists = owner }
				owner = { is_hive_empire = no }
			}
		}
		text = building_avb_necrophage_3_desc
	}
	desc = {
		trigger = {
			exists = owner
			owner = { is_hive_empire = yes }
		}
		text = building_avb_necrophage_3_desc_hive
	}

	potential = {
		avb_hg_changes = yes
		exists = owner
		owner = {
			has_origin = origin_necrophage
			has_trait = trait_necrophage
			NOR = {
				has_valid_civic = civic_fanatic_purifiers
				has_valid_civic = civic_hive_devouring_swarm
			}
			is_ai = no #the AI will just kill all its necrophytes
		}
	}

	allow = {
		has_upgraded_capital_4 = yes
		hidden_trigger = {
			if = {
				limit = {
					owner = { is_ai = yes }
				}
				any_owned_species = {
					species_can_be_necrophaged = yes
				}
			}
		}
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					NOT = { has_origin = origin_necrophage }
					NOT = { has_trait = trait_necrophage }
				}
			}
			AND = {
				owner = { is_ai = yes }
				NOT = {
					any_owned_species = {
						species_can_be_necrophaged = yes
					}
				}
			}
		}
	}

	planet_modifier = {
		job_necro_apprentice_add = 8
	}

	triggered_planet_modifier = {
		potential = {
			is_planet_class = pc_hive
			exists = owner
			owner = { is_hive_empire = yes }
		}
		job_necro_apprentice_add = 4
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @avb_b3_minerals
			exotic_gases = @avb_b3_rare_cost
		}
		upkeep = {
			energy = @avb_b3_upkeep
			exotic_gases = @avb_b3_rare_upkeep
		}
	}

	prerequisites = {
		tech_avb_necrophage_3
	}
	show_tech_unlock_if = {
		has_origin = origin_necrophage
		has_trait = trait_necrophage
	}

	triggered_desc = {
		text = job_necro_apprentice_effect_desc
		trigger = {
			exists = owner
			owner = {
				is_lithoid_empire = no
				is_hive_empire = no
			}
		}
	}
	triggered_desc = {
		text = job_necro_apprentice_effect_lithoid_desc
		trigger = {
			exists = owner
			owner = {
				is_lithoid_empire = yes
				is_hive_empire = no
			}
		}
	}
	triggered_desc = {
		text = job_necro_apprentice_effect_hive_desc
		trigger = {
			exists = owner
			owner = {
				is_lithoid_empire = no
				is_hive_empire = yes
			}
		}
	}
	triggered_desc = {
		text = job_necro_apprentice_effect_hive_lithoid_desc
		trigger = {
			exists = owner
			owner = {
				is_lithoid_empire = yes
				is_hive_empire = yes
			}
		}
	}
	triggered_desc = {
		text = necrophage_elevation_timer_tooltip
		trigger = {
			has_planet_flag = necrophage_elevation_timer
		}
	}
}