#############
# Robot buildings
#############
building_robot_assembly_complex = {
	icon = building_machine_assembly_complex
	base_buildtime = @b3_time
	can_build = no

	category = pop_assembly

	building_sets = {
		government
		urban
	}

	potential = {
		exists = owner
		OR = {
			owner = { is_ai = no }
			NOT = { exists = assembling_species }
			assembling_species = { is_robotic_species = yes }
		}
		owner = {
			is_regular_empire = yes
			is_individual_machine = no
			NOT = { has_policy_flag = robots_outlawed }
			OR = {
				is_ai = no
				NOT = { has_ascension_perk = ap_engineered_evolution }
				is_materialist = yes
			}
		}
	}

	convert_to = {
		building_machine_assembly_complex
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					is_regular_empire = no
					has_policy_flag = robots_outlawed
				}
			}
			AND = {
				owner = { is_ai = yes }
				free_district_slots = 0
				free_building_slots = 0
				free_housing <= 0
				free_jobs <= 0
			}
			owner = {
				is_ai = yes
				has_ascension_perk = ap_engineered_evolution
				is_materialist = no
			}
		}
	}

	inline_script = {
		script = jobs/roboticist_add
		AMOUNT = @building_static_jobs
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				OR = {
					has_origin = origin_mechanists
					is_individual_machine = yes
					has_country_flag = synthetic_empire
				}
			}
			any_owned_pop_group = {
				has_auto_modding_trait = yes
			}
		}
		modifier = {
			auto_mod_monthly_add = 400
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_country_flag = synth_unscheduled_updates
			}
		}
		modifier = {
			planet_pop_assembly_mult = 0.1
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_country_flag = synth_safe_updates
			}
		}
		modifier = {
			planet_pop_assembly_mult = -0.1
			planet_stability_add = 5
		}
	}

	### JOB STRATA FOCUS MODIFIERS ###
	triggered_planet_modifier = { # Synth ruler focus
		potential = {
			exists = owner
			owner = {
				has_country_flag = synth_focus_rulers
			}
		}
		modifier = {
			planet_jobs_ruler_produces_mult = 0.15
		}
	}

	triggered_planet_modifier = { # Synth specialist focus
		potential = {
			exists = owner
			owner = {
				has_country_flag = synth_focus_specialists
			}
		}
		modifier = {
			planet_jobs_specialist_produces_mult = 0.05
		}
	}

	triggered_planet_modifier = { # Synth worker focus
		potential = {
			exists = owner
			owner = {
				has_country_flag = synth_focus_workers
			}
		}
		modifier = {
			planet_jobs_worker_produces_mult = 0.10
		}
	}

	triggered_planet_modifier = { # Synth upkeep focus
		potential = {
			exists = owner
			owner = {
				has_country_flag = synth_focus_upkeep
			}
		}
		modifier = {
			planet_jobs_upkeep_mult = -0.05
		}
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @b3_minerals
			rare_crystals = @b3_rare_cost
		}
		upkeep = {
			energy = @b3_upkeep
			rare_crystals = @b3_rare_upkeep
		}
	}

	prerequisites = {
		tech_robot_assembly_complex
	}
	upgrades = {
		building_avb_robot_assembly_plant_2
	}
}
building_avb_robot_assembly_plant_2 = {
	base_buildtime = @avb_b3_time
	can_build = no

	category = pop_assembly
	
	building_sets = {
		government
		urban
	}
	potential = {
		exists = owner
		OR = {
			owner = { is_ai = no }
			NOT = { exists = assembling_species }
			assembling_species = { is_robotic_species = yes }
		}
		owner = {
			is_regular_empire = yes
			is_individual_machine = no
			NOT = { has_policy_flag = robots_outlawed }
			OR = {
				is_ai = no
				NOT = { has_ascension_perk = ap_engineered_evolution }
				is_materialist = yes
			}
		}
	}
	
	allow = {
		has_fully_upgraded_capital = yes
	}
	
	convert_to = {
		building_avb_machine_assembly_plant_2
	}
	
	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					is_regular_empire = no
					has_policy_flag = robots_outlawed
				}
			}
			AND = {
				owner = { is_ai = yes }
				free_district_slots = 0
				free_building_slots = 0
				free_housing <= 0
				free_jobs <= 0
			}
			owner = {
				is_ai = yes
				has_ascension_perk = ap_engineered_evolution
				is_materialist = no
			}
		}
	}
	inline_script = {
		script = jobs/roboticist_add
		AMOUNT = 400
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				OR = {
					has_origin = origin_mechanists
					is_individual_machine = yes
					has_country_flag = synthetic_empire
				}
			}
			any_owned_pop_group = {
				has_auto_modding_trait = yes
			}
		}
		modifier = {
			auto_mod_monthly_add = 600
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_country_flag = synth_unscheduled_updates
			}
		}
		modifier = {
			planet_pop_assembly_mult = 0.15
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_country_flag = synth_safe_updates
			}
		}
		modifier = {
			planet_pop_assembly_mult = -0.075
			planet_stability_add = 7.5
		}
	}

	### JOB STRATA FOCUS MODIFIERS ###
	triggered_planet_modifier = { # Synth ruler focus
		potential = {
			exists = owner
			owner = {
				has_country_flag = synth_focus_rulers
			}
		}
		modifier = {
			planet_jobs_ruler_produces_mult = 0.225
		}
	}

	triggered_planet_modifier = { # Synth specialist focus
		potential = {
			exists = owner
			owner = {
				has_country_flag = synth_focus_specialists
			}
		}
		modifier = {
			planet_jobs_specialist_produces_mult = 0.075
		}
	}

	triggered_planet_modifier = { # Synth worker focus
		potential = {
			exists = owner
			owner = {
				has_country_flag = synth_focus_workers
			}
		}
		modifier = {
			planet_jobs_worker_produces_mult = 0.15
		}
	}

	triggered_planet_modifier = { # Synth upkeep focus
		potential = {
			exists = owner
			owner = {
				has_country_flag = synth_focus_upkeep
			}
		}
		modifier = {
			planet_jobs_upkeep_mult = -0.075
		}
	}
	resources = {
		category = planet_buildings
		cost = {
			minerals = @avb_b3_minerals
			rare_crystals = @avb_b3_rare_cost
		}
		upkeep = {
			energy = @avb_b3_upkeep
			rare_crystals = @avb_b3_rare_upkeep
		}
	}
	prerequisites = {
		"tech_avb_robot_assembly_plant_2"
	}
}
#############
# Machine buildings
#############
building_machine_assembly_complex = {
	base_buildtime = @b3_time
	can_build = no

	category = pop_assembly

	building_sets = {
		government
		urban
	}

	potential = {
		exists = owner
		owner = {
			OR = {
				is_machine_empire = yes
				is_individual_machine = yes
			}
		}
		NOR = {
			has_modifier = gestation_colony
			has_modifier = resort_colony
		}
	}

	convert_to = {
		building_robot_assembly_complex
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				is_robot_empire = no
			}
			AND = {
				owner = { is_ai = yes }
				free_district_slots = 0
				free_building_slots = 0
				free_housing <= 0
				free_jobs <= 0
			}
		}
	}

	inline_script = {
		script = jobs/roboticist_add
		AMOUNT = @building_static_jobs
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				OR = {
					is_machine_empire = yes
					is_individual_machine = yes
				}
			}
			any_owned_pop_group = {
				has_auto_modding_trait = yes
			}
		}
		modifier = {
			auto_mod_monthly_add = 400
		}
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @b3_minerals
			rare_crystals = @b3_rare_cost
		}
		upkeep = {
			energy = @b3_upkeep
			rare_crystals = @b3_rare_upkeep
		}
	}

	prerequisites = {
		tech_mega_assembly
	}

	triggered_desc = {
		trigger = {
			exists = owner
			owner = {
				is_machine_empire = yes
			}
		}
		text = job_replicator_effect_desc
	}

	triggered_desc = {
		trigger = {
			exists = owner
			owner = {
				is_individual_machine = yes
			}
		}
		text = job_roboticist_individual_machine_effect_desc
	}
	upgrades = {
		building_avb_machine_assembly_plant_2
	}
}
building_avb_machine_assembly_plant_2 = {
	icon = building_avb_robot_assembly_plant_2
	base_buildtime = @avb_b3_time
	can_build = no

	category = pop_assembly
	
	building_sets = {
		government
		urban
	}
	potential = {
		exists = owner
		owner = {
			OR = {
				is_machine_empire = yes
				is_individual_machine = yes
			}
		}
		NOR = {
			has_modifier = gestation_colony 
			has_modifier = resort_colony
		}
	}
	allow = {
		has_fully_upgraded_capital = yes
	}
	
	convert_to = {
		building_avb_robot_assembly_plant_2
	}
	
	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				is_robot_empire = no
			}
			AND = {
				owner = { is_ai = yes }
				free_district_slots = 0
				free_building_slots = 0
				free_housing <= 0
				free_jobs <= 0
			}
		}
	}
	inline_script = {
		script = jobs/roboticist_add
		AMOUNT = 400
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				OR = {
					is_machine_empire = yes
					is_individual_machine = yes
				}
			}
			any_owned_pop_group = {
				has_auto_modding_trait = yes
			}
		}
		modifier = {
			auto_mod_monthly_add = 600
		}
	}
	resources = {
		category = planet_buildings
		cost = {
			minerals = @avb_b3_minerals
			rare_crystals = @avb_b3_rare_cost
		}
		upkeep = {
			energy = @avb_b3_upkeep
			rare_crystals = @avb_b3_rare_upkeep
		}
	}
	triggered_desc = {
		trigger = {
			exists = owner
			owner = {
				is_machine_empire = yes
			}
		}
		text = job_replicator_effect_desc
	}

	triggered_desc = {
		trigger = {
			exists = owner
			owner = {
				is_individual_machine = yes
			}
		}
		text = job_roboticist_individual_machine_effect_desc
	}
	prerequisites = {
		"tech_avb_machine_assembly_plant_2"
	}
}

#############
# Hive buildings
#############

building_spawning_pool = {
	base_buildtime = @b1_time
	planet_limit = 1

	category = pop_assembly

	building_sets = {
		government
		urban
	}

	potential = {
		exists = owner
		owner = {
			is_hive_empire = yes
			is_wilderness_empire = no
			NOT = { has_origin = origin_progenitor_hive }
		}
	}

	destroy_trigger = {
		exists = owner
		owner = {
			OR = {
				is_hive_empire = no
				has_origin = origin_progenitor_hive
			}
		}
	}

	inline_script = {
		script = jobs/spawning_drone_add
		AMOUNT = @building_static_jobs_low
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_technology = tech_gene_tailoring
			}
			any_owned_pop_group = {
				has_auto_modding_trait = yes
			}
		}
		modifier = {
			auto_mod_monthly_add = 200
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				game_start_auto_mod_empire = yes
			}
			any_owned_pop_group = {
				has_auto_modding_trait = yes
			}
		}
		modifier = {
			auto_mod_monthly_add = 200
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_active_tradition = tr_cybernetics_synaptic_sub_processing }
		}
		modifier = {
			job_augmentor_drone_add = 200
		}
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @b1_minerals
		}
		upkeep = {
			energy = 2
		}
	}

	convert_to = {
		building_offspring_nest
	}

	triggered_desc = {
		trigger = {
			exists = owner
			owner = {
				has_active_tradition = tr_cybernetics_synaptic_sub_processing
			}
		}
		text = job_augmentor_drone_assembly_desc
	}

	triggered_desc = {
		text = spawning_pool_tooltip
	}
	upgrades = {
		"building_avb_spawning_pool_2"
	}
}
building_avb_spawning_pool_2 = {
	base_buildtime = @avb_b2_time
	can_build = no

	category = amenity
	
	building_sets = {
		government
		urban
	}
	potential = {
		exists = owner
		owner = {
			is_hive_empire = yes
			is_wilderness_empire = no
			NOT = { has_origin = origin_progenitor_hive }
		}
	}
	destroy_trigger = {
		exists = owner
		owner = {
			OR = {
				is_hive_empire = no
				has_origin = origin_progenitor_hive
			}
		}
	}
	convert_to = {
		building_avb_offspring_nest_2
	}
	allow = {
		has_fully_upgraded_capital = yes
	}
	inline_script = {
		script = jobs/spawning_drone_add
		AMOUNT = @building_static_jobs
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_technology = tech_gene_tailoring
			}
			any_owned_pop_group = {
				has_auto_modding_trait = yes
			}
		}
		modifier = {
			auto_mod_monthly_add = 400
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				game_start_auto_mod_empire = yes
			}
			any_owned_pop_group = {
				has_auto_modding_trait = yes
			}
		}
		modifier = {
			auto_mod_monthly_add = 400
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_active_tradition = tr_cybernetics_synaptic_sub_processing }
		}
		modifier = {
			job_augmentor_drone_add = 400
		}
	}
	resources = {
		category = planet_buildings
		cost = {
			minerals = @avb_b2_minerals
			exotic_gases = 50
			volatile_motes = 25
		}
		upkeep = {
			energy = @avb_b2_upkeep
			exotic_gases = 2
			volatile_motes = 1
		}
	}
	
	prerequisites = {
		"tech_avb_spawning_pool_2"
	}
	triggered_desc = {
		trigger = {
			exists = owner
			owner = {
				has_active_tradition = tr_cybernetics_synaptic_sub_processing
			}
		}
		text = job_augmentor_drone_assembly_desc
	}

	triggered_desc = {
		text = spawning_pool_tooltip
	}
}

building_offspring_nest = {
	base_buildtime = @b1_time
	planet_limit = 1

	category = pop_assembly

	building_sets = {
		government
		urban
	}

	potential = {
		exists = owner
		owner = {
			has_origin = origin_progenitor_hive
		}
		OR = {
			num_buildings = { type = any value < 15 }
			owner = { is_ai = no }
		}
	}

	destroy_trigger = {
		exists = owner
		owner = { NOT = { has_origin = origin_progenitor_hive } }
	}

	#ruined_trigger = {
	#	has_planet_flag = offspring_defeated
	#}

	inline_script = {
		script = jobs/spawning_drone_add
		AMOUNT = @building_static_jobs_low
	}

	convert_to = {
		building_spawning_pool
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_active_tradition = tr_cybernetics_synaptic_sub_processing }
		}
		modifier = {
			job_augmentor_drone_add = 200
		}
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @b1_minerals
		}
		upkeep = {
			energy = 2
		}
	}

	triggered_desc = {
		trigger = {
			exists = owner
			owner = {
				has_active_tradition = tr_cybernetics_synaptic_sub_processing
			}
		}
		text = job_augmentor_drone_assembly_desc
	}

	triggered_desc = {
		text = offspring_nest_tooltip
	}
	upgrades = {
		building_avb_offspring_nest_2
	}
}
building_avb_offspring_nest_2 = {
	base_buildtime = @avb_b2_time

	can_build = no
	category = pop_assembly
	building_sets = {
		government
		urban
	}

	potential = {
		exists = owner
		owner = {
			has_origin = origin_progenitor_hive
		}
		OR = {
			num_buildings = { type = any value < 15 }
			owner = { is_ai = no }
		}
	}

	destroy_trigger = {
		exists = owner
		owner = { NOT = { has_origin = origin_progenitor_hive } }
	}

	allow = {
		has_major_upgraded_capital = yes
	}
	convert_to = {
		building_avb_spawning_pool_2
	}

	inline_script = {
		script = jobs/spawning_drone_add
		AMOUNT = @building_static_jobs
	}
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_active_tradition = tr_cybernetics_synaptic_sub_processing }
		}
		modifier = {
			job_augmentor_drone_add = 400
		}
	}
	resources = {
		category = planet_buildings
		cost = {
			minerals = @avb_b2_minerals
			exotic_gases = 50
		}
		upkeep = {
			energy = @avb_b2_upkeep
		}
	}
	prerequisites = {
		tech_avb_offspring_nest_2
	}

	triggered_desc = {
		trigger = {
			exists = owner
			owner = {
				has_active_tradition = tr_cybernetics_synaptic_sub_processing
			}
		}
		text = job_augmentor_drone_assembly_desc
	}

	triggered_desc = {
		text = offspring_nest_tooltip
	}
}
building_necrophage_house_of_apotheosis = {
	icon = building_chamber_of_elevation_2
	base_buildtime = @b3_time
	can_build = no
	position_priority = 100

	category = pop_assembly

	building_sets = {
		government
		urban
	}

	desc = {
		trigger = {
			OR = {
				NOT = { exists = owner }
				owner = { is_hive_empire = no }
			}
		}
		text = building_necrophage_house_of_apotheosis_desc
	}
	desc = {
		trigger = {
			exists = owner
			owner = { is_hive_empire = yes }
		}
		text = building_necrophage_house_of_apotheosis_desc_hive
	}

	potential = {
		exists = owner
		owner = {
			has_origin = origin_necrophage
			has_trait = trait_necrophage
			NOR = {
				has_valid_civic = civic_fanatic_purifiers
				has_valid_civic = civic_hive_devouring_swarm
			}
			is_ai = no #the AI will just kill all its necrophytes
		}
	}

	allow = {
		hidden_trigger = {
			if = {
				limit = {
					owner = { is_ai = yes }
				}
				any_owned_species = {
					species_can_be_necrophaged = yes
				}
			}
		}
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					NOT = { has_origin = origin_necrophage }
					NOT = { has_trait = trait_necrophage }
				}
			}
			AND = {
				owner = { is_ai = yes }
				NOT = {
					any_owned_species = {
						species_can_be_necrophaged = yes
					}
				}
			}
		}
	}

	planet_modifier = {
		job_necro_apprentice_add = 600
	}

	triggered_planet_modifier = {
		potential = {
			is_planet_class = pc_hive
			exists = owner
			owner = { is_hive_empire = yes }
		}
		job_necro_apprentice_add = 400
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @b2_minerals
			exotic_gases = @b2_rare_cost
		}
		upkeep = {
			energy = @b2_upkeep
			exotic_gases = @b2_rare_upkeep
		}
	}

	prerequisites = {
		tech_glandular_acclimation
	}

	show_tech_unlock_if = {
		has_origin = origin_necrophage
		has_trait = trait_necrophage
	}

	triggered_desc = {
		text = job_necro_apprentice_effect_desc
		trigger = {
			exists = owner
			owner = {
				is_lithoid_empire = no
				is_hive_empire = no
			}
		}
	}
	triggered_desc = {
		text = job_necro_apprentice_effect_lithoid_desc
		trigger = {
			exists = owner
			owner = {
				is_lithoid_empire = yes
				is_hive_empire = no
			}
		}
	}
	triggered_desc = {
		text = job_necro_apprentice_effect_hive_desc
		trigger = {
			exists = owner
			owner = {
				is_lithoid_empire = no
				is_hive_empire = yes
			}
		}
	}
	triggered_desc = {
		text = job_necro_apprentice_effect_hive_lithoid_desc
		trigger = {
			exists = owner
			owner = {
				is_lithoid_empire = yes
				is_hive_empire = yes
			}
		}
	}
	triggered_desc = {
		text = necrophage_elevation_timer_tooltip
		trigger = {
			has_planet_flag = necrophage_elevation_timer
		}
	}
	upgrades = {
		building_avb_necrophage_3
	}
}
building_avb_necrophage_3 = {
	base_buildtime = @avb_b3_time
	can_build = no
	position_priority = 100

	category = pop_assembly

	building_sets = {
		government
		urban
	}
	desc = {
		trigger = {
			OR = {
				NOT = { exists = owner }
				owner = { is_hive_empire = no }
			}
		}
		text = building_avb_necrophage_3_desc
	}
	desc = {
		trigger = {
			exists = owner
			owner = { is_hive_empire = yes }
		}
		text = building_avb_necrophage_3_desc_hive
	}

	potential = {
		exists = owner
		owner = {
			has_origin = origin_necrophage
			has_trait = trait_necrophage
			NOR = {
				has_valid_civic = civic_fanatic_purifiers
				has_valid_civic = civic_hive_devouring_swarm
			}
			is_ai = no #the AI will just kill all its necrophytes
		}
	}

	allow = {
		hidden_trigger = {
			if = {
				limit = {
					owner = { is_ai = yes }
				}
				any_owned_species = {
					species_can_be_necrophaged = yes
				}
			}
		}
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					NOT = { has_origin = origin_necrophage }
					NOT = { has_trait = trait_necrophage }
				}
			}
			AND = {
				owner = { is_ai = yes }
				NOT = {
					any_owned_species = {
						species_can_be_necrophaged = yes
					}
				}
			}
		}
	}

	planet_modifier = {
		job_necro_apprentice_add = 800
	}

	triggered_planet_modifier = {
		potential = {
			is_planet_class = pc_hive
			exists = owner
			owner = { is_hive_empire = yes }
		}
		job_necro_apprentice_add = 400
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @avb_b3_minerals
			exotic_gases = @avb_b3_rare_cost
		}
		upkeep = {
			energy = @avb_b3_upkeep
			exotic_gases = @avb_b3_rare_upkeep
		}
	}

	prerequisites = {
		tech_avb_necrophage_3
	}
	show_tech_unlock_if = {
		has_origin = origin_necrophage
		has_trait = trait_necrophage
	}

	triggered_desc = {
		text = job_necro_apprentice_effect_desc
		trigger = {
			exists = owner
			owner = {
				is_lithoid_empire = no
				is_hive_empire = no
			}
		}
	}
	triggered_desc = {
		text = job_necro_apprentice_effect_lithoid_desc
		trigger = {
			exists = owner
			owner = {
				is_lithoid_empire = yes
				is_hive_empire = no
			}
		}
	}
	triggered_desc = {
		text = job_necro_apprentice_effect_hive_desc
		trigger = {
			exists = owner
			owner = {
				is_lithoid_empire = no
				is_hive_empire = yes
			}
		}
	}
	triggered_desc = {
		text = job_necro_apprentice_effect_hive_lithoid_desc
		trigger = {
			exists = owner
			owner = {
				is_lithoid_empire = yes
				is_hive_empire = yes
			}
		}
	}
	triggered_desc = {
		text = necrophage_elevation_timer_tooltip
		trigger = {
			has_planet_flag = necrophage_elevation_timer
		}
	}
}
#############
# Clone vats
#############

building_clone_vats = {
	base_buildtime = @b1_time

	category = pop_assembly

	planet_limit = {
		base = 1
		modifier = {
			exists = owner
			owner = {
				has_tradition = tr_cloning_finish
			}
			has_upgraded_capital = yes
			add = 1
		}
		modifier = {
			exists = owner
			owner = {
				has_tradition = tr_cloning_finish
			}
			has_major_upgraded_capital = yes
			add = 1
		}
		modifier = {
			exists = owner
			owner = {
				has_tradition = tr_cloning_finish
			}
			has_fully_upgraded_capital = yes
			add = 1
		}
		modifier = {
			exists = owner
			owner = {
				has_tradition = tr_cloning_finish
			}
			has_upgraded_capital_4 = yes
			add = 1
		}
		modifier = {
			exists = owner
			owner = {
				has_tradition = tr_cloning_finish
			}
			has_upgraded_capital_5 = yes
			add = 1
		}
		modifier = {
			exists = owner
			owner = {
				has_tradition = tr_cloning_finish
			}
			has_upgraded_capital_6 = yes
			add = 1
		}
	}

	building_sets = {
		government
		urban
	}

	potential = {
		exists = owner
		NOT = { has_modifier = resort_colony }
		OR = {
			owner = { is_ai = no }
			NOT = { exists = assembling_species }
			assembling_species = { is_organic_species = yes }
		}
		OR = {
			owner = { is_ai = no }
			NAND = {
				free_district_slots = 0
				free_building_slots <= 1
				free_housing <= 0
				free_jobs <= 0
			}
		}
	}

	destroy_trigger = {
		exists = owner
		OR = {
			AND = {
				owner = { is_ai = yes }
				free_district_slots = 0
				free_building_slots = 0
				free_housing <= 0
				free_jobs <= 0
			}
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_technology = tech_gene_tailoring
			}
			any_owned_pop_group = {
				has_auto_modding_trait = yes
			}
		}
		modifier = {
			auto_mod_monthly_add = 200
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				game_start_auto_mod_empire = yes
			}
			any_owned_pop_group = {
				has_auto_modding_trait = yes
			}
		}
		modifier = {
			auto_mod_monthly_add = 200
		}
	}

	triggered_planet_pop_group_modifier_for_all = {
		potential = {
			owner = {
				has_cloning_tradition = no
			}
		}
		bonus_pop_growth = 1.5
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_cloning_tradition = no
			}
		}
		fake_pop_growth_mod = 1.5
	}

	triggered_planet_pop_group_modifier_for_all = {
		potential = {
			owner = {
				has_cloning_tradition = yes
				NOT = {
					has_tradition = tr_genetics_efficient_cloning
				}
			}
		}
		bonus_pop_growth = 3
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_cloning_tradition = yes
				NOT = {
					has_tradition = tr_genetics_efficient_cloning
				}
			}
		}
		fake_pop_growth_mod = 3
	}

	triggered_planet_pop_group_modifier_for_all = {
		potential = {
			owner = {
				has_cloning_tradition = yes
				has_tradition = tr_genetics_efficient_cloning
			}
		}
		bonus_pop_growth = 4.5
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_cloning_tradition = yes
				has_tradition = tr_genetics_efficient_cloning
			}
		}
		fake_pop_growth_mod = 4.5
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_country_flag = clone_army_full_potential
				has_active_tradition = tr_cloning_adopt_clone_army
			}
		}
		clone_soldiers_sustained = @clones_sustained_low
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_country_flag = clone_army_full_potential
				has_active_tradition = tr_cloning_finish_clone_army
			}
		}
		clone_soldiers_sustained = @clones_sustained_low
	}

	resources = {
		category = planet_buildings_clone_vats

		# Base cost
		cost = {
			minerals = 500
		}
		# Org/Lith cost
		cost = {
			trigger = {
				exists = owner
				owner = { is_lithoid_empire = no }
			}
			food = 500
		}
		cost = {
			trigger = {
				exists = owner
				owner = { is_lithoid_empire = yes }
			}
			energy = 500
		}

		# Base upkeep
		upkeep = {
			energy = 2
		}
		# Org/Lith upkeep
		upkeep = {
			trigger = {
				exists = owner
				owner = {
					is_lithoid_empire = no
				}
			}
			food = 15
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = {
					is_lithoid_empire = no
					has_cloning_tradition = yes
				}
			}
			food = 15
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = {
					is_lithoid_empire = no
					has_cloning_tradition = yes
				}
			}
			food = 15
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = {
					is_lithoid_empire = yes
				}
			}
			minerals = 15
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = {
					is_lithoid_empire = yes
					has_cloning_tradition = yes
				}
			}
			minerals = 15
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				is_cloning_authority = yes
				is_megacorp = yes
			}
		}
		planet_jobs_trade_produces_mult = @replicatory_association_trade_mult
		planet_amenities_add = @replicatory_association_amenities_add
	}

	prerequisites = {
		tech_cloning
	}

	upgrades = {
		"building_avb_clone_vats_2"
	}
}
building_avb_clone_vats_2 = {
	base_buildtime = @avb_b2_time
	can_build = no

	category = pop_assembly
	
	planet_limit = {
		base = 1
		modifier = {
			exists = owner
			owner = {
				has_tradition = tr_cloning_finish
			}
			has_upgraded_capital = yes
			add = 1
		}
		modifier = {
			exists = owner
			owner = {
				has_tradition = tr_cloning_finish
			}
			has_major_upgraded_capital = yes
			add = 1
		}
		modifier = {
			exists = owner
			owner = {
				has_tradition = tr_cloning_finish
			}
			has_fully_upgraded_capital = yes
			add = 1
		}
		modifier = {
			exists = owner
			owner = {
				has_tradition = tr_cloning_finish
			}
			has_upgraded_capital_4 = yes
			add = 1
		}
		modifier = {
			exists = owner
			owner = {
				has_tradition = tr_cloning_finish
			}
			has_upgraded_capital_5 = yes
			add = 1
		}
		modifier = {
			exists = owner
			owner = {
				has_tradition = tr_cloning_finish
			}
			has_upgraded_capital_6 = yes
			add = 1
		}
	}

	building_sets = {
		government
		urban
	}
	potential = {
		exists = owner
		NOT = { has_modifier = resort_colony }
		OR = {
			owner = { is_ai = no }
			NOT = { exists = assembling_species }
			assembling_species = { is_organic_species = yes }
		}
		OR = {
			owner = { is_ai = no }
			NAND = {
				free_district_slots = 0
				free_building_slots <= 1
				free_housing <= 0
				free_jobs <= 0
			}
		}
	}

	destroy_trigger = {
		exists = owner
		OR = {
			AND = {
				owner = { is_ai = yes }
				free_district_slots = 0
				free_building_slots = 0
				free_housing <= 0
				free_jobs <= 0
			}
		}
	}
	
	allow = {
		has_fully_upgraded_capital = yes
	}
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_technology = tech_gene_tailoring
			}
			any_owned_pop_group = {
				has_auto_modding_trait = yes
			}
		}
		modifier = {
			auto_mod_monthly_add = 300
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				game_start_auto_mod_empire = yes
			}
			any_owned_pop_group = {
				has_auto_modding_trait = yes
			}
		}
		modifier = {
			auto_mod_monthly_add = 300
		}
	}

	triggered_planet_pop_group_modifier_for_all = {
		potential = {
			owner = {
				has_cloning_tradition = no
			}
		}
		bonus_pop_growth = 2.25
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_cloning_tradition = no
			}
		}
		fake_pop_growth_mod = 2.25
	}

	triggered_planet_pop_group_modifier_for_all = {
		potential = {
			owner = {
				has_cloning_tradition = yes
				NOT = {
					has_tradition = tr_genetics_efficient_cloning
				}
			}
		}
		bonus_pop_growth = 4.5
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_cloning_tradition = yes
				NOT = {
					has_tradition = tr_genetics_efficient_cloning
				}
			}
		}
		fake_pop_growth_mod = 4.5
	}

	triggered_planet_pop_group_modifier_for_all = {
		potential = {
			owner = {
				has_cloning_tradition = yes
				has_tradition = tr_genetics_efficient_cloning
			}
		}
		bonus_pop_growth = 6.75
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_cloning_tradition = yes
				has_tradition = tr_genetics_efficient_cloning
			}
		}
		fake_pop_growth_mod = 6.75
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_country_flag = clone_army_full_potential
				has_active_tradition = tr_cloning_adopt_clone_army
			}
		}
		clone_soldiers_sustained = @clones_sustained_low
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_country_flag = clone_army_full_potential
				has_active_tradition = tr_cloning_finish_clone_army
			}
		}
		clone_soldiers_sustained = @clones_sustained_low
	}
	resources = {
		category = planet_buildings_clone_vats

		# Base cost
		cost = {
			minerals = 1000
		}
		# Org/Lith cost
		cost = {
			trigger = {
				exists = owner
				owner = { is_lithoid_empire = no }
			}
			food = 1000
		}
		cost = {
			trigger = {
				exists = owner
				owner = { is_lithoid_empire = yes }
			}
			energy = 1000
		}

		# Base upkeep
		upkeep = {
			energy = 5
		}
		# Org/Lith upkeep
		upkeep = {
			trigger = {
				exists = owner
				owner = {
					is_lithoid_empire = no
				}
			}
			food = 30
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = {
					is_lithoid_empire = no
					has_cloning_tradition = yes
				}
			}
			food = 30
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = {
					is_lithoid_empire = no
					has_cloning_tradition = yes
				}
			}
			food = 30
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = {
					is_lithoid_empire = yes
				}
			}
			minerals = 30
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = {
					is_lithoid_empire = yes
					has_cloning_tradition = yes
				}
			}
			minerals = 30
		}
	}
	prerequisites = {
		"tech_avb_clone_vats_2"
	}
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				is_cloning_authority = yes
				is_megacorp = yes
			}
		}
		planet_jobs_trade_produces_mult = @replicatory_association_trade_mult
		planet_amenities_add = @replicatory_association_amenities_add
	}
}

building_clone_army_clone_vat = {
	icon = building_ancient_relics
	base_buildtime = 90
	position_priority = 100

	empire_limit = {
		base = 5
	}

	category = pop_assembly

	building_sets = {
		origin
	}

	potential = {
		exists = owner
		owner = {
			has_origin = origin_clone_army
			NOT = {
				has_country_flag = clone_army_fertility_unlocked
			}
		}
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					NOT = { has_origin = origin_clone_army }
					is_synthetic_empire = yes
					has_country_flag = clone_army_fertility_unlocked
				}
			}
		}
	}

	planet_modifier = {
		clone_soldiers_sustained = @clones_sustained_high
	}

	# Add growth from 0 to 25 depending on 'clone_pops_missing_per_vat'.
	triggered_planet_pop_group_modifier_for_species = {
		potential = {
			has_infertile_clone_soldier_trait = yes
			planet = {
				check_variable = { which = clone_pops_missing_per_vat value > 2200 }
			}
		}
		bonus_pop_growth = 25
	}
	triggered_planet_modifier = {
		potential = {
			check_variable = { which = clone_pops_missing_per_vat value > 2200 }
		}
		fake_pop_growth_mod = 25
	}

	inline_script = {
		script = buildings/clone_army_vat_output
		UPPER_LIMIT = 2200
		LOWER_LIMIT = 2000
		GROWTH = 22
	}

	inline_script = {
		script = buildings/clone_army_vat_output
		UPPER_LIMIT = 2000
		LOWER_LIMIT = 1800
		GROWTH = 20
	}

	inline_script = {
		script = buildings/clone_army_vat_output
		UPPER_LIMIT = 1800
		LOWER_LIMIT = 1600
		GROWTH = 17
	}

	inline_script = {
		script = buildings/clone_army_vat_output
		UPPER_LIMIT = 1600
		LOWER_LIMIT = 1400
		GROWTH = 15
	}

	inline_script = {
		script = buildings/clone_army_vat_output
		UPPER_LIMIT = 1400
		LOWER_LIMIT = 1200
		GROWTH = 12
	}

	inline_script = {
		script = buildings/clone_army_vat_output
		UPPER_LIMIT = 1200
		LOWER_LIMIT = 1000
		GROWTH = 10
	}

	inline_script = {
		script = buildings/clone_army_vat_output
		UPPER_LIMIT = 1000
		LOWER_LIMIT = 800
		GROWTH = 7
	}

	inline_script = {
		script = buildings/clone_army_vat_output
		UPPER_LIMIT = 800
		LOWER_LIMIT = 600
		GROWTH = 5
	}

	triggered_planet_pop_group_modifier_for_species = {
		potential = {
			has_infertile_clone_soldier_trait = yes
			planet = {
				check_variable = { which = clone_pops_missing_per_vat value <= 600 }
			}
		}
		bonus_pop_growth = 2
	}
	triggered_planet_modifier = {
		potential = {
			check_variable = { which = clone_pops_missing_per_vat value <= 600 }
		}
		fake_pop_growth_mod = 2
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				is_cloning_authority = yes
				is_megacorp = yes
			}
		}
		planet_jobs_trade_produces_mult = @replicatory_association_trade_mult
		planet_amenities_add = @replicatory_association_amenities_add
		mult = 2
	}

	resources = {
		category = planet_buildings_clone_vats
		cost = {
			minerals = @b2_minerals
		}
		upkeep = {
			energy = @b2_upkeep
		}
	}

	upgrades = {
		building_avb_clone_army_clone_vat_2
	}

	prerequisites = {
	}

	triggered_desc = {
		text = building_clone_army_clone_vat_effect_desc
	}
	triggered_desc = {
		trigger = {
			OR = {
				has_building = building_robot_assembly_plant
				AND = {
					exists = assembling_species
					assembling_species = { is_robotic_species = yes }
				}
			}
		}
		text = tooltip_organic_and_artificial_assembly_warning
	}

	is_essential = yes
	ai_estimate_without_unemployment = yes
}
building_avb_clone_army_clone_vat_2 = {
	base_buildtime = 900
	position_priority = 100
	prerequisites = { tech_avb_clone_army_vats_2 }
	can_build = no

	category = pop_assembly

	building_sets = {
		origin
	}
	potential = {
		exists = owner
		owner = {
			has_origin = origin_clone_army
			NOT = {
				has_country_flag = clone_army_fertility_unlocked
			}
		}
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					NOT = { has_origin = origin_clone_army }
					is_synthetic_empire = yes
					has_country_flag = clone_army_fertility_unlocked
				}
			}
		}
	}

	planet_modifier = {
		clone_soldiers_sustained = 4000
	}

	triggered_planet_pop_group_modifier_for_species = {
		potential = {
			has_infertile_clone_soldier_trait = yes
			planet = {
				check_variable = { which = clone_pops_missing_per_vat value > 3700 }
			}
		}
		bonus_pop_growth = 25
	}
	triggered_planet_modifier = {
		potential = {
			check_variable = { which = clone_pops_missing_per_vat value > 3700 }
		}
		fake_pop_growth_mod = 25
	}
	inline_script = {
		script = buildings/clone_army_vat_output
		UPPER_LIMIT = 3700
		LOWER_LIMIT = 3400
		GROWTH = 22
	}
	inline_script = {
		script = buildings/clone_army_vat_output
		UPPER_LIMIT = 3400
		LOWER_LIMIT = 3100
		GROWTH = 22
	}
	inline_script = {
		script = buildings/clone_army_vat_output
		UPPER_LIMIT = 3100
		LOWER_LIMIT = 2800
		GROWTH = 22
	}
	inline_script = {
		script = buildings/clone_army_vat_output
		UPPER_LIMIT = 2800
		LOWER_LIMIT = 2500
		GROWTH = 22
	}
	inline_script = {
		script = buildings/clone_army_vat_output
		UPPER_LIMIT = 2500
		LOWER_LIMIT = 2200
		GROWTH = 22
	}
	inline_script = {
		script = buildings/clone_army_vat_output
		UPPER_LIMIT = 2200
		LOWER_LIMIT = 2000
		GROWTH = 22
	}

	inline_script = {
		script = buildings/clone_army_vat_output
		UPPER_LIMIT = 2000
		LOWER_LIMIT = 1800
		GROWTH = 20
	}

	inline_script = {
		script = buildings/clone_army_vat_output
		UPPER_LIMIT = 1800
		LOWER_LIMIT = 1600
		GROWTH = 17
	}

	inline_script = {
		script = buildings/clone_army_vat_output
		UPPER_LIMIT = 1600
		LOWER_LIMIT = 1400
		GROWTH = 15
	}

	inline_script = {
		script = buildings/clone_army_vat_output
		UPPER_LIMIT = 1400
		LOWER_LIMIT = 1200
		GROWTH = 12
	}

	inline_script = {
		script = buildings/clone_army_vat_output
		UPPER_LIMIT = 1200
		LOWER_LIMIT = 1000
		GROWTH = 10
	}

	inline_script = {
		script = buildings/clone_army_vat_output
		UPPER_LIMIT = 1000
		LOWER_LIMIT = 800
		GROWTH = 7
	}

	inline_script = {
		script = buildings/clone_army_vat_output
		UPPER_LIMIT = 800
		LOWER_LIMIT = 600
		GROWTH = 5
	}

	triggered_planet_pop_group_modifier_for_species = {
		potential = {
			has_infertile_clone_soldier_trait = yes
			planet = {
				check_variable = { which = clone_pops_missing_per_vat value <= 600 }
			}
		}
		bonus_pop_growth = 3
	}
	triggered_planet_modifier = {
		potential = {
			check_variable = { which = clone_pops_missing_per_vat value <= 600 }
		}
		fake_pop_growth_mod = 3
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				is_cloning_authority = yes
				is_megacorp = yes
			}
		}
		planet_jobs_trade_produces_mult = @replicatory_association_trade_mult
		planet_amenities_add = @replicatory_association_amenities_add
		mult = 3
	}
	resources = {
		category = planet_buildings
		cost = {
			minerals = @avb_b3_minerals
		}
		upkeep = {
			energy = @avb_b3_upkeep
		}
	}
	triggered_desc = {
		text = building_clone_army_clone_vat_effect_desc
	}
	triggered_desc = {
		trigger = {
			OR = {
				has_building = building_robot_assembly_plant
				AND = {
					exists = assembling_species
					assembling_species = { is_robotic_species = yes }
				}
			}
		}
		text = tooltip_organic_and_artificial_assembly_warning
	}

	is_essential = yes
	ai_estimate_without_unemployment = yes
}

#############
# Permanent Employment Building
#############

building_posthumous_employment_center = {
	base_buildtime = @b1_time
	planet_limit = 1

	category = pop_assembly

	building_sets = {
		government
		urban
	}

	potential = {
		exists = owner
		OR = {
			owner = {
				is_ai = no
			}
			NOT = { exists = assembling_species }
			assembling_species = { is_organic_species = yes }
		}
		OR = {
			owner = { is_ai = no }
			NAND = {
				free_district_slots = 0
				free_building_slots <= 1
				free_housing <= 0
				free_jobs <= 0
			}
		}
		owner = {
			is_regular_empire = yes
			has_valid_civic = civic_permanent_employment
		}
	}

	allow = {
		has_upgraded_capital = yes
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				NOT = { has_valid_civic = civic_permanent_employment }
			}
			AND = {
				owner = { is_ai = yes }
				free_district_slots = 0
				free_building_slots = 0
				free_housing <= 0
				free_jobs <= 0
			}
		}
	}

	planet_modifier = {
		job_reassigner_add = 100
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @b1_minerals
		}
		upkeep = {
			energy = @b1_upkeep
		}
	}

	triggered_desc = {
		text = job_reassigner_effect_desc
	}
	triggered_desc = {
		trigger = {
			OR = {
				has_building = building_robot_assembly_plant
				AND = {
					exists = assembling_species
					assembling_species = { is_robotic_species = yes }
				}
			}
		}
		text = tooltip_organic_and_artificial_assembly_warning
	}
	upgrades = {
		building_avb_posthumous_employment_center_2
	}
}
building_avb_posthumous_employment_center_2 = {
	base_buildtime = @avb_b2_time
	can_build = no

	category = pop_assembly

	building_sets = {
		government
		urban
	}

	potential = {
		exists = owner
		OR = {
			owner = {
				is_ai = no
			}
			NOT = { exists = assembling_species }
			assembling_species = { is_organic_species = yes }
		}
		OR = {
			owner = { is_ai = no }
			NAND = {
				free_district_slots = 0
				free_building_slots <= 1
				free_housing <= 0
				free_jobs <= 0
			}
		}
		owner = {
			is_regular_empire = yes
			has_valid_civic = civic_permanent_employment
		}
	}

	allow = {
		has_fully_upgraded_capital = yes
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				NOT = { has_valid_civic = civic_permanent_employment }
			}
			AND = {
				owner = { is_ai = yes }
				free_district_slots = 0
				free_building_slots = 0
				free_housing <= 0
				free_jobs <= 0
			}
		}
	}

	prerequisites = {
		"tech_avb_posthumous_employment_center_2"
	}
	planet_modifier = {
		job_reassigner_add = 200
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @avb_b2_minerals
		}
		upkeep = {
			energy = @avb_b2_upkeep
		}
	}
	triggered_desc = {
		text = job_reassigner_effect_desc
	}
	triggered_desc = {
		trigger = {
			OR = {
				has_building = building_robot_assembly_plant
				AND = {
					exists = assembling_species
					assembling_species = { is_robotic_species = yes }
				}
			}
		}
		text = tooltip_organic_and_artificial_assembly_warning
	}
}

building_toxic_bath_hive = {
	base_buildtime = @b1_time
	planet_limit = 1
	icon = building_toxic_bath_hive

	category = amenity

	building_sets = {
		government
		urban
		industrial
		foundry
		factory
	}

	potential = {
		owner = {
			is_hive_empire = yes
			is_wilderness_empire = no
			has_valid_civic = civic_hive_toxic_baths
		}
	}
	destroy_trigger = {
		exists = owner
		owner = {
			OR = {
				is_hive_empire = no
				NOT = { has_valid_civic = civic_hive_toxic_baths }
			}
		}
	}

	triggered_desc = {
		text = spawning_drone_is_mutagenic_tt
	}

	triggered_desc = {
		text = NEW_LINE
	}

	inline_script = {
		script = jobs/spawning_drone_add
		AMOUNT = @building_static_jobs_low
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @b1_minerals
		}
		upkeep = {
			energy = @b1_upkeep
		}
	}
	upgrades = {
		"building_avb_toxic_bath_hive_2"
	}
}
building_avb_toxic_bath_hive_2 = {
	base_buildtime = @avb_b2_time
	category = amenity
	can_build = no

	building_sets = {
		government
		urban
		industrial
		foundry
		factory
	}
	allow = {
		has_major_upgraded_capital = yes
	}
	potential = {
		owner = {
			is_hive_empire = yes
			is_wilderness_empire = no
			has_valid_civic = civic_hive_toxic_baths
		}
	}
	destroy_trigger = {
		exists = owner
		owner = {
			OR = {
				is_hive_empire = no
				NOT = { has_valid_civic = civic_hive_toxic_baths }
			}
		}
	}
	prerequisites = {
		tech_avb_toxic_bath_hive_2
	}
	triggered_desc = {
		text = spawning_drone_is_mutagenic_tt
	}

	triggered_desc = {
		text = NEW_LINE
	}

	inline_script = {
		script = jobs/spawning_drone_add
		AMOUNT = @building_static_jobs
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @avb_b2_minerals
		}
		upkeep = {
			energy = @avb_b2_upkeep
		}
	}
}

building_toxic_bath_machine = {
	base_buildtime = @b1_time
	planet_limit = 1
	icon = building_toxic_bath_machine

	category = amenity

	building_sets = {
		government
		urban
		industrial
		foundry
		factory
	}

	potential = {
		OR = {
			AND = {
				owner = { is_machine_empire = yes }
				owner = { has_toxic_baths = yes }
			}
			AND = {
				owner = { is_individual_machine = yes }
				owner = { has_toxic_baths = yes }
			}
		}
	}
	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				NOR = {
					is_machine_empire = no
					is_individual_machine = no
				}
			}
			owner = {
				has_toxic_baths = no
			}
		}
	}

	triggered_desc = {
		text = roboticist_is_mutagenic_tt
	}

	triggered_desc = {
		text = NEW_LINE
	}

	inline_script = {
		script = jobs/roboticist_add
		AMOUNT = @building_static_jobs_low
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @b1_minerals
		}
		upkeep = {
			energy = @b1_upkeep
		}
	}
	upgrades = {
		"building_avb_toxic_bath_machine_2"
	}
}
building_avb_toxic_bath_machine_2 = {
	base_buildtime = @avb_b2_time
	category = amenity
	can_build = no

	building_sets = {
		government
		urban
		industrial
		foundry
		factory
	}
	allow = {
		has_major_upgraded_capital = yes
	}

	potential = {
		OR = {
			AND = {
				owner = { is_machine_empire = yes }
				owner = { has_toxic_baths = yes }
			}
			AND = {
				owner = { is_individual_machine = yes }
				owner = { has_toxic_baths = yes }
			}
		}
	}
	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				NOR = {
					is_machine_empire = no
					is_individual_machine = no
				}
			}
			owner = {
				has_toxic_baths = no
			}
		}
	}

	triggered_desc = {
		text = roboticist_is_mutagenic_tt
	}

	triggered_desc = {
		text = NEW_LINE
	}

	inline_script = {
		script = jobs/roboticist_add
		AMOUNT = @building_static_jobs
	}
	resources = {
		category = planet_buildings
		cost = {
			minerals = @avb_b2_minerals
		}
		upkeep = {
			energy = @avb_b2_upkeep
		}
	}
	prerequisites = {
		tech_avb_toxic_bath_machine_2
	}
}
